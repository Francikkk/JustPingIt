[project]
name = "JustPingIt"
description = "Network host pinger with a simple CLI interface"
version = "1.0.0"
readme = "README.md"
authors = [{name = "Francesco Brunetti", email = "francesco.brunetti@gmail.com"}]
maintainers = [{name = "Francesco Brunetti", email = "francesco.brunetti@gmail.com"}]
license = "MIT"

[tool.mypy] # Mypy configuration for type checking
ignore_missing_imports = true
python_version = "3.12"
strict = true
disallow_untyped_defs = true        # Disallow functions without type hints
warn_unused_ignores = true         # Catch useless `# type: ignore`
warn_return_any = true              # Warn if returning `Any`
no_implicit_optional = true         # Disallow Optional inference from default None
show_error_codes = true             # Show Mypy error codes
pretty = true                       # Nicer output formatting
explicit_package_bases = true

[tool.black] # Black configuration for code formatting
line-length = 79
target-version = ['py312']
quiet = true

[tool.isort] # isort configuration for import sorting
profile = "black"
line_length = 79

[tool.ruff] # Ruff configuration for linting and formatting
line-length = 79
fix = true
target-version = "py312"
[tool.ruff.lint]
select = ["E", "W", "F", "B", "C90", "I", "UP", "N", "S"]
ignore = ["E203", "B008", "B006"]
exclude = ["tests/", ".venv", "__pycache__", ".mypy_cache", ".pytest_cache", "build", "dist", "pyproject.toml", ".gitignore", "README.md", "requirements.txt", "LICENSE", ".vscode/*", ".ruff_cache", "pyproject.toml"]
[tool.ruff.per-file-ignores]
"tests/*.py" = ["S101"]

[tool.bandit] # Bandit configuration for security checks
targets = ["src/"]
exclude_dirs = ["tests/"]
recursive = true